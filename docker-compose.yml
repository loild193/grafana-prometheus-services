services:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - grafana_local
    depends_on:
      - mysqld-exporter
    links:
      - node-exporter
      - mysqld-exporter
      - mongodb-exporter
      - redis-exporter

  node-exporter:
    image: prom/node-exporter
    ports:
      - 9100:9100
    networks:
      - grafana_local

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./provisioning:/etc/grafana/provisioning
      - ./volumes/grafana-storage:/var/lib/grafana
    networks:
      - grafana_local
    links:
      - prometheus
    depends_on:
      - prometheus

  mysql:
    container_name: mysql
    image: mysql:8.0
    command: --innodb-use-native-aio=0
    environment:
      TERM: linux
      LANG: 'C.UTF-8'
      LOG_ROTATION_DAY: 7
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    dns:
      - 1.1.1.1
    logging:
      driver: json-file
      options:
        max-size: '50m'
        max-file: '2'
    restart: 'no'
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p${DB_PASSWORD}'
        ]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - ./volumes/db/data:/var/lib/mysql:delegated
    networks:
      - grafana_local

  mysqld-exporter:
    image: prom/mysqld-exporter
    command: --config.my-cnf=/cfg/.my.cnf
    environment:
      - "DATA_SOURCE_NAME=root${DB_PASSWORD}:@(mysql:3306)/"
    ports:
      - 9104:9104
    volumes:
      - ./config.my-cnf:/cfg/.my.cnf
    networks:
      - grafana_local
    links:
      - mysql
    depends_on:
      - mysql

  mongo:
    image: mongo:latest
    container_name: mongo
    command: --profile 2 --slowms 15 --slowOpSampleRate 0.5
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017 --quiet
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - ./volumes/mongodb/data/:/data/db/
      - ./volumes/mongodb/input/:/data/input/
      - ./volumes/mongodb/mongod.conf:/etc/mongod.conf
    ports:
      - 127.0.0.1:27017:27017
    networks:
      - grafana_local

  mongodb-exporter:
    image: percona/mongodb_exporter:0.40
    container_name: mongodb-exporter
    command:
      - '--mongodb.global-conn-pool'
      - '--collector.diagnosticdata'
      - '--discovering-mode'
      - '--compatible-mode'
      - '--mongodb.uri=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/'
    restart: always
    environment:
      WAIT_HOSTS: mongo:27017
      MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
    ports:
      - 9216:9216
    networks:
      - grafana_local
    depends_on:
      - mongo

  redis:
    container_name: redis
    image: redis:7.0-alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_AUTH_PASSWORD}
    privileged: true
    sysctls:
      net.core.somaxconn: '511'
    environment:
      TERM: linux
      LANG: 'C.UTF-8'
      LOG_ROTATION_DAY: 7
    dns:
      - 1.1.1.1
    logging:
      driver: json-file
      options:
        max-size: '50m'
        max-file: '2'
    restart: 'no'
    healthcheck:
      test:
        [
          'CMD',
          'redis-cli',
          '-a',
          '${REDIS_AUTH_PASSWORD}',
          'ping'
        ]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - 127.0.0.1:6739:6739
    volumes:
      - ./volumes/redis:/data:delegated
    networks:
      - grafana_local

  redis-exporter:
    image: oliver006/redis_exporter:alpine
    environment:
      REDIS_ADDR: 'redis://redis:6379'
      REDIS_PASSWORD: ${REDIS_AUTH_PASSWORD}
    ports:
      - 9121:9121
    networks:
      - grafana_local
    links:
      - redis
    depends_on:
      - redis

networks:
  grafana_local:
    driver: bridge
